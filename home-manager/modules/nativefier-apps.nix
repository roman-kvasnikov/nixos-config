{pkgs, ...}: 
let
  # –ü—Ä–æ—Å—Ç–æ–π wrapper –¥–ª—è npx nativefier (—Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–±)
  nativefier = pkgs.writeShellScriptBin "nativefier" ''
    export PATH="${pkgs.nodejs}/bin:${pkgs.electron}/bin:$PATH"
    export ELECTRON_OVERRIDE_DIST_PATH="${pkgs.electron}/bin/"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nativefier –≤ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    NPM_CACHE="$HOME/.cache/nativefier-npm"
    mkdir -p "$NPM_CACHE"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º npx –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
    exec ${pkgs.nodejs}/bin/npx --cache "$NPM_CACHE" nativefier@latest "$@"
  '';

  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  makeWebApp = {name, url, icon ? name, userAgent ? null}: 
    pkgs.writeShellScriptBin name ''
      set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      
      APP_DIR="$HOME/.local/share/nativefier-apps"
      DESKTOP_DIR="$HOME/.local/share/applications"
      ICON_DIR="$HOME/.local/share/icons/hicolor/256x256/apps"
      
      mkdir -p "$APP_DIR"
      mkdir -p "$DESKTOP_DIR"
      mkdir -p "$ICON_DIR"
      
      # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
      if [ ! -d "$APP_DIR/${name}-linux-x64" ]; then
        echo "üîß Creating ${name} app..."
        
        # –°–æ–±–∏—Ä–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è nativefier
        NATIVEFIER_ARGS=(
          --name "${name}"
          --platform linux
          --arch x64
          --electron-version latest
          --single-instance
          --tray
          --counter
          --bounce
          --fast-quit
          --app-copyright "Web App"
          --app-version "1.0.0"
          --out "$APP_DIR"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º user-agent –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
        if [ -n "${userAgent}" ]; then
          NATIVEFIER_ARGS+=(--user-agent "${userAgent}")
        fi
        
        # –î–æ–±–∞–≤–ª—è–µ–º URL –≤ –∫–æ–Ω–µ—Ü
        NATIVEFIER_ARGS+=("${url}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º nativefier
        if ${nativefier}/bin/nativefier "''${NATIVEFIER_ARGS[@]}"; then
          echo "‚úÖ Nativefier completed successfully"
        else
          echo "‚ùå Nativefier failed to create app"
          exit 1
        fi
        
        # –°–æ–∑–¥–∞–µ–º .desktop —Ñ–∞–π–ª –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        if [ -d "$APP_DIR/${name}-linux-x64" ]; then
          cat > "$DESKTOP_DIR/${name}.desktop" <<EOF
[Desktop Entry]
Name=${name}
Comment=Web Application
Exec=$HOME/.local/share/nativefier-apps/${name}-linux-x64/${name}
Icon=$HOME/.local/share/nativefier-apps/${name}-linux-x64/resources/app/icon.png
Terminal=false
Type=Application
Categories=Network;WebBrowser;
Keywords=web;app;${name};
EOF
          
          echo "üì± Desktop entry created: $DESKTOP_DIR/${name}.desktop"
          
          # –ö–æ–ø–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
          if [ -f "$APP_DIR/${name}-linux-x64/resources/app/icon.png" ]; then
            cp "$APP_DIR/${name}-linux-x64/resources/app/icon.png" "$ICON_DIR/${name}.png"
            echo "üñºÔ∏è  Icon copied to system icons"
          fi
          
          echo "‚úÖ ${name} app created successfully!"
        else
          echo "‚ùå App directory not found after creation"
          exit 1
        fi
      else
        echo "üì± ${name} app already exists"
      fi
      
      # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      if [ -d "$APP_DIR/${name}-linux-x64" ]; then
        if [ -f "$APP_DIR/${name}-linux-x64/${name}" ]; then
          exec "$APP_DIR/${name}-linux-x64/${name}" "$@"
        else
          echo "‚ùå App executable not found: $APP_DIR/${name}-linux-x64/${name}" >&2
          exit 1
        fi
      else
        echo "‚ùå App directory not found: $APP_DIR/${name}-linux-x64" >&2
        exit 1
      fi
    '';

  # WhatsApp Web —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º User-Agent
  whatsappWeb = makeWebApp {
    name = "whatsapp-web";
    url = "https://web.whatsapp.com/";
    userAgent = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36";
  };

  # Telegram Web
  telegramWeb = makeWebApp {
    name = "telegram-web";
    url = "https://web.telegram.org/z/";
  };

  # YouTube Music
  youtubeMusicWeb = makeWebApp {
    name = "youtube-music";
    url = "https://music.youtube.com/";
  };

  # Discord Web
  discordWeb = makeWebApp {
    name = "discord-web";  
    url = "https://discord.com/app";
  };

  # Gmail
  gmailWeb = makeWebApp {
    name = "gmail";
    url = "https://mail.google.com/";
  };

  # –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏
  manageNativefierApps = pkgs.writeShellScriptBin "manage-nativefier-apps" ''
    #!/bin/bash
    
    set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    
    APP_DIR="$HOME/.local/share/nativefier-apps"
    DESKTOP_DIR="$HOME/.local/share/applications"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    if [ ! -d "$APP_DIR" ]; then
      echo "üìÅ Creating apps directory: $APP_DIR"
      mkdir -p "$APP_DIR"
    fi
    
    if [ ! -d "$DESKTOP_DIR" ]; then
      echo "üìÅ Creating desktop directory: $DESKTOP_DIR"
      mkdir -p "$DESKTOP_DIR"
    fi
    
    case "$1" in
      "list")
        echo "üì± Available Nativefier apps:"
        if [ -d "$APP_DIR" ] && [ "$(ls -A "$APP_DIR" 2>/dev/null)" ]; then
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º for —Ü–∏–∫–ª –≤–º–µ—Å—Ç–æ while read –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±–ª–∞—Å—Ç—å—é –≤–∏–¥–∏–º–æ—Å—Ç–∏
          for app_dir in "$APP_DIR"/*-linux-x64; do
            if [ -d "$app_dir" ]; then
              app_name=$(basename "$app_dir" | sed 's/-linux-x64$//')
              echo "  ‚Ä¢ $app_name"
            fi
          done
        else
          echo "  No apps found"
        fi
        ;;
      "remove")
        if [ -z "$2" ]; then
          echo "Usage: manage-nativefier-apps remove <app-name>"
          exit 1
        fi
        app_name="$2"
        if [ -d "$APP_DIR/${app_name}-linux-x64" ]; then
          echo "üóëÔ∏è  Removing $app_name app..."
          rm -rf "$APP_DIR/${app_name}-linux-x64"
          if [ -f "$DESKTOP_DIR/${app_name}.desktop" ]; then
            rm -f "$DESKTOP_DIR/${app_name}.desktop"
            echo "üóëÔ∏è  Removed desktop entry"
          fi
          echo "‚úÖ Removed $app_name app"
        else
          echo "‚ùå App $app_name not found"
          exit 1
        fi
        ;;
      "clean")
        echo "üßπ Cleaning all Nativefier apps..."
        if [ -d "$APP_DIR" ]; then
          rm -rf "$APP_DIR"/*
          echo "üóëÔ∏è  Removed all app directories"
        fi
        
        # –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ .desktop —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –Ω–∞—à–∏–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏
        if [ -d "$DESKTOP_DIR" ]; then
          for desktop_file in "$DESKTOP_DIR"/*.desktop; do
            if [ -f "$desktop_file" ]; then
              # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –Ω–∞—à .desktop —Ñ–∞–π–ª
              if grep -q "nativefier-apps" "$desktop_file" 2>/dev/null; then
                rm -f "$desktop_file"
                echo "üóëÔ∏è  Removed desktop entry: $(basename "$desktop_file")"
              fi
            fi
          done
        fi
        echo "‚úÖ All apps cleaned"
        ;;
      "status")
        echo "üìä Nativefier Apps Status:"
        echo "  Apps directory: $APP_DIR"
        echo "  Desktop directory: $DESKTOP_DIR"
        if [ -d "$APP_DIR" ] && [ "$(ls -A "$APP_DIR" 2>/dev/null)" ]; then
          app_count=$(find "$APP_DIR" -maxdepth 1 -name "*-linux-x64" -type d | wc -l)
          echo "  Installed apps: $app_count"
        else
          echo "  Installed apps: 0"
        fi
        ;;
      *)
        echo "Usage: manage-nativefier-apps {list|remove <app>|clean|status}"
        echo ""
        echo "Commands:"
        echo "  list                    - List all available apps"
        echo "  remove <app-name>      - Remove specific app"
        echo "  clean                  - Remove all apps"
        echo "  status                 - Show status information"
        ;;
    esac
  '';

in {
  home.packages = [
    nativefier
    whatsappWeb
    telegramWeb
    youtubeMusicWeb
    discordWeb
    gmailWeb
    manageNativefierApps
  ];

  # –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è nativefier –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
  home.file.".local/share/nativefier-apps/.keep".text = "";
  home.file.".local/share/applications/.keep".text = "";
}
